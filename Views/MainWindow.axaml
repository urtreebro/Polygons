<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:Polygons.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Polygons="clr-namespace:Polygons"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="Polygons.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        PointerPressed="OnPointerPressed"
        PointerMoved="OnPointerMoved"
        PointerReleased="OnPointerReleased"
        Closing="Window_OnClosing"
        Title="Polygons">

    <Design.DataContext>
        <vm:MainWindowViewModel />
    </Design.DataContext>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <Button Theme="{StaticResource MenuButton}" Click="Button_New">New</Button>
                <Button Theme="{StaticResource MenuButton}" Click="Button_Open">Open...</Button>
                <Button Theme="{StaticResource MenuButton}" Click="Button_Save">Save</Button>
                <Button Theme="{StaticResource MenuButton}" Click="Button_SaveAs">Save As...</Button>
                <Button Theme="{StaticResource MenuButton}" Click="Button_Exit">Exit</Button>
            </MenuItem>
            <Button x:Name="UndoButton" Width="30" Margin="-10" Background="White" Click="UndoButton_OnClick" HotKey="Ctrl+z">
                <Image Source="../Assets/undo_arrow.png"></Image>
            </Button>
            <Button Width="30" Margin="-10" Background="White" Click="RedoButton_OnClick" HotKey="Ctrl+Shift+z">
                <Image Source="../Assets/redo_arrow.png"></Image>
            </Button>
            <MenuItem Header="Figure type">
                <ListBox x:Name="Shapes" SelectionChanged="Shapes_OnSelectionChanged"></ListBox>
            </MenuItem>
            <MenuItem Header="Drawing algorithm">
                <ListBox x:Name="Algorithms" SelectionChanged="Algorithms_OnSelectionChanged"></ListBox>
            </MenuItem>
            <MenuItem Header="Check performance">
                <Button Theme="{StaticResource MenuButton}" Click="Button_OnClickCheckByDef">Check ByDef</Button>
                <Button Theme="{StaticResource MenuButton}" Click="Button_OnClickCheckJarvis">Check Jarvis</Button>
                <Button Theme="{StaticResource MenuButton}" Click="Button_OnClickCheckPerformance">Check both</Button>
            </MenuItem>
            <MenuItem Header="Settings">
                <Button Theme="{StaticResource MenuButton}" Click="Button_OnClickChangeRadius">Change Radius</Button>
                <Button Theme="{StaticResource MenuButton}" Click="Button_OnClickChangeColor">Change Color</Button>
            </MenuItem>
            <MenuItem Header="Play">
                <ToggleButton x:Name="TimerEnabled" Click="TimerEnabled_OnClick">
                    <Panel>
                        <TextBlock Classes="start">Play</TextBlock>
                        <TextBlock Classes="stop">Stop</TextBlock>
                    </Panel>
                </ToggleButton>
            </MenuItem>
            <MenuItem Header="Test">
                <Button Theme="{StaticResource MenuButton}" Click="Button_OnClickParallel">Parallel</Button>
                <Button Theme="{StaticResource MenuButton}" Click="Button_OnClickSerial">Serial</Button>
            </MenuItem>
        </Menu>
        <Polygons:CustomControl Name="MyCustomControl"></Polygons:CustomControl>
    </DockPanel>

    <Window.Styles>
        <Style Selector="ToggleButton TextBlock.start">
            <Setter Property="IsVisible" Value="True" />
            <Setter Property="Foreground" Value="White"></Setter>
        </Style>
        <Style Selector="ToggleButton TextBlock.start">
            <Setter Property="IsVisible" Value="True" />
            <Setter Property="Foreground" Value="White"></Setter>
        </Style>
        <Style Selector="ToggleButton:checked TextBlock.start">
            <Setter Property="IsVisible" Value="False" />
        </Style>
        <Style Selector="ToggleButton TextBlock.stop">
            <Setter Property="IsVisible" Value="False" />
        </Style>
        <Style Selector="ToggleButton:checked TextBlock.stop">
            <Setter Property="IsVisible" Value="True" />
        </Style>
        <Style Selector="ToggleButton">
            <Setter Property="Background" Value="LimeGreen"></Setter>
        </Style>
        <Style Selector="ToggleButton:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="ForestGreen"></Setter>
        </Style>
        <Style Selector="ToggleButton:checked /template/ ContentPresenter">
            <Setter Property="Background" Value="Red"></Setter>
        </Style>
        <Style Selector="ToggleButton:checked">
            <Style Selector="^:pointerover /template/ ContentPresenter">
                <Setter Property="Background" Value="Firebrick"></Setter>
            </Style>
        </Style>


    </Window.Styles>
</Window>